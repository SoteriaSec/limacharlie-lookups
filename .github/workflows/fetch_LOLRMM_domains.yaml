name: Update RMM Domain & IP & URL Lookup Lists

on:
  schedule:
    # Every Sunday at 00:00 UTC
    - cron: '0 0 * * 0'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-lookup:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          persist-credentials: true

      - name: Download Sigma rule file
        run: |
          curl -sL \
            https://raw.githubusercontent.com/magicsword-io/LOLRMM/main/detections/sigma/rmm_domains_dns_queries.yml \
            -o rmm_domains_dns_queries.yml

      - name: Extract lookups & write JSON files
        run: |
          mkdir -p LOLRMM-Domains
          pip3 install pyyaml

          python3 <<'EOF'
          import yaml, json, re

          # Load the Sigma rule
          with open("rmm_domains_dns_queries.yml") as f:
              rule = yaml.safe_load(f)

          raw = rule["detection"]["selection"]["query|contains"]

          domains = {}
          ips = {}
          urls = {}

          # IPv4 regex
          ipv4_re = re.compile(r'^\d{1,3}(?:\.\d{1,3}){3}$')

          for entry in raw:
              # remove any leading dots or asterisks
              trimmed = entry.lstrip(".*")
              if not trimmed:
                  continue
              # classify as URL if it contains a slash
              if "/" in trimmed:
                  key = trimmed.lower()
                  urls[key] = {}
              # classify as IP
              elif ipv4_re.match(trimmed):
                  key = trimmed
                  ips[key] = {}
              # otherwise it's a domain
              else:
                  key = trimmed.lower()
                  domains[key] = {}

          # sort each and write out as JSON objects
          for filename, data in [
              ("LOLRMM-Domains/rmm-domain-lookup-list.json", domains),
              ("LOLRMM-Domains/rmm-ip-lookup-list.json", ips),
              ("LOLRMM-Domains/rmm-urls-lookup-list.json", urls),
          ]:
              ordered = {k: data[k] for k in sorted(data)}
              with open(filename, "w") as out:
                  json.dump(ordered, out, indent=2)
          EOF

      - name: Commit & push lookup files
        working-directory: ${{ github.workspace }}
        shell: bash
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add LOLRMM-Domains/rmm-domain-lookup-list.json \
                  LOLRMM-Domains/rmm-ip-lookup-list.json \
                  LOLRMM-Domains/rmm-urls-lookup-list.json
          if git diff --cached --quiet; then
            echo "No changes to lookup lists"
          else
            git commit -m "chore: update RMM domain, IP, and URL lookup lists"
            git push
          fi
